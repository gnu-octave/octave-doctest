Copyright (c) 2019, 2025 Colin B. Macdonald
SPDX-License-Identifier: BSD-3-Clause

@example
  @comment doctest: -TEXINFO_SKIP_BLOCKS_WO_OUTPUT
  OLD = compare_versions (ver ("octave").Version, "10.0.0", "<");
@end example

@example
2 + (1 + !))   % doctest: +SKIP_IF(OLD)
  @error{} syntax error
  @error{} >>> 2 + (1 + !))   % doctest: +SKIP_IF(OLD)
  @error{}               ^
@end example

@example
3 + (1 + !))   % doctest: +SKIP_UNLESS(OLD)
  @error{} parse error:
  @error{}
  @error{} syntax error
  @error{} >>> 3 + (1 + !))   % doctest: +SKIP_UNLESS(OLD)
  @error{}               ^
@end example

@example
nosuchfcn(42)
  @error{} error: 'nosuchfcn' undefined near line 1...
@end example

@example
nosuchfcn(42)
  @print{} error: 'nosuchfcn' undefined near line 1...
@end example

@example
nosuchfcn(42)
  @error{} 'nosuchfcn' undefined near line 1...
@end example

In symbolic I had a failure when a test contained more code after an
error.  It did not pass without careful treatment of the typography of
the texinfo error macro.
@example
a = 3;
b = nosuchfcn(a)
  @error{} ... undefined...
c = exp(a)
  @result{} c = 20.086
@end example
